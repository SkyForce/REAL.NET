//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Hello.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IHelloListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class HelloBaseListener : IHelloListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.oclFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOclFile([NotNull] HelloParser.OclFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.oclFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOclFile([NotNull] HelloParser.OclFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.packageName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackageName([NotNull] HelloParser.PackageNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.packageName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackageName([NotNull] HelloParser.PackageNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.oclExpressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOclExpressions([NotNull] HelloParser.OclExpressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.oclExpressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOclExpressions([NotNull] HelloParser.OclExpressionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstraint([NotNull] HelloParser.ConstraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstraint([NotNull] HelloParser.ConstraintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.contextDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContextDeclaration([NotNull] HelloParser.ContextDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.contextDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContextDeclaration([NotNull] HelloParser.ContextDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.classifierContext"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassifierContext([NotNull] HelloParser.ClassifierContextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.classifierContext"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassifierContext([NotNull] HelloParser.ClassifierContextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.operationContext"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperationContext([NotNull] HelloParser.OperationContextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.operationContext"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperationContext([NotNull] HelloParser.OperationContextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.operationName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperationName([NotNull] HelloParser.OperationNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.operationName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperationName([NotNull] HelloParser.OperationNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameterList([NotNull] HelloParser.FormalParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameterList([NotNull] HelloParser.FormalParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.typeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSpecifier([NotNull] HelloParser.TypeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.typeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSpecifier([NotNull] HelloParser.TypeSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.collectionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollectionType([NotNull] HelloParser.CollectionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.collectionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollectionType([NotNull] HelloParser.CollectionTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.oclExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOclExpression([NotNull] HelloParser.OclExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.oclExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOclExpression([NotNull] HelloParser.OclExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnType([NotNull] HelloParser.ReturnTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnType([NotNull] HelloParser.ReturnTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] HelloParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] HelloParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.letExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetExpression([NotNull] HelloParser.LetExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.letExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetExpression([NotNull] HelloParser.LetExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.ifExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfExpression([NotNull] HelloParser.IfExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.ifExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfExpression([NotNull] HelloParser.IfExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.logicalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalExpression([NotNull] HelloParser.LogicalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.logicalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalExpression([NotNull] HelloParser.LogicalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpression([NotNull] HelloParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpression([NotNull] HelloParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpression([NotNull] HelloParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpression([NotNull] HelloParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpression([NotNull] HelloParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpression([NotNull] HelloParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] HelloParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] HelloParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.postfixExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostfixExpression([NotNull] HelloParser.PostfixExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.postfixExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostfixExpression([NotNull] HelloParser.PostfixExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpression([NotNull] HelloParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpression([NotNull] HelloParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.propertyCallParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyCallParameters([NotNull] HelloParser.PropertyCallParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.propertyCallParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyCallParameters([NotNull] HelloParser.PropertyCallParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] HelloParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] HelloParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.enumLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumLiteral([NotNull] HelloParser.EnumLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.enumLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumLiteral([NotNull] HelloParser.EnumLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.simpleTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleTypeSpecifier([NotNull] HelloParser.SimpleTypeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.simpleTypeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleTypeSpecifier([NotNull] HelloParser.SimpleTypeSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.literalCollection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralCollection([NotNull] HelloParser.LiteralCollectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.literalCollection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralCollection([NotNull] HelloParser.LiteralCollectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.collectionItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollectionItem([NotNull] HelloParser.CollectionItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.collectionItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollectionItem([NotNull] HelloParser.CollectionItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.propertyCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyCall([NotNull] HelloParser.PropertyCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.propertyCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyCall([NotNull] HelloParser.PropertyCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.qualifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiers([NotNull] HelloParser.QualifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.qualifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiers([NotNull] HelloParser.QualifiersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarator([NotNull] HelloParser.DeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarator([NotNull] HelloParser.DeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.pathName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPathName([NotNull] HelloParser.PathNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.pathName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPathName([NotNull] HelloParser.PathNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.timeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeExpression([NotNull] HelloParser.TimeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.timeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeExpression([NotNull] HelloParser.TimeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.actualParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActualParameterList([NotNull] HelloParser.ActualParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.actualParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActualParameterList([NotNull] HelloParser.ActualParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.logicalOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOperator([NotNull] HelloParser.LogicalOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.logicalOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOperator([NotNull] HelloParser.LogicalOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.collectionKind"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollectionKind([NotNull] HelloParser.CollectionKindContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.collectionKind"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollectionKind([NotNull] HelloParser.CollectionKindContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.relationalOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalOperator([NotNull] HelloParser.RelationalOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.relationalOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalOperator([NotNull] HelloParser.RelationalOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.addOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddOperator([NotNull] HelloParser.AddOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.addOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddOperator([NotNull] HelloParser.AddOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.multiplyOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplyOperator([NotNull] HelloParser.MultiplyOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.multiplyOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplyOperator([NotNull] HelloParser.MultiplyOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.unaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryOperator([NotNull] HelloParser.UnaryOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.unaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryOperator([NotNull] HelloParser.UnaryOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterName([NotNull] HelloParser.NameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitName([NotNull] HelloParser.NameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="HelloParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] HelloParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HelloParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] HelloParser.NumberContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
